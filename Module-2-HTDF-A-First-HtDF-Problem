;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname Module-2-HTDF-A-First-HtDF-Problem) (read-case-sensitive #t) (teachpacks ((lib "universe.rkt" "teachpack" "2htdp") (lib "image.rkt" "teachpack" "2htdp") (lib "batch-io.rkt" "teachpack" "2htdp"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "universe.rkt" "teachpack" "2htdp") (lib "image.rkt" "teachpack" "2htdp") (lib "batch-io.rkt" "teachpack" "2htdp")) #f)))
;A First HtDF Problem
;Problem: Design a function that pluralizes a given word. (Pluralize means to convert the word to
;its plural form.) For simplicity you may assume that just adding s is enough to pluralize a word.

;; string -> string
;; receives a singular word and produces a plural word
(check-expect (plural "car") "cars")
(check-expect (plural "pizza") "pizzas")

;(define (plural n)  ns)  ; this is the stub

(define (plural n)
  (string-append n "s"))